[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "bank-projections"
version = "0.1.0"
description = "Balance sheet forecasting tool for banks - capital management, liquidity management, and stress testing"
readme = "README.md"
license = { text = "AGPL-3.0" }
requires-python = ">=3.13"
authors = [
    { name = "Your Name", email = "your.email@example.com" }
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: GNU Affero General Public License v3",
    "Programming Language :: Python :: 3",
]

dependencies = [
    "loguru",
    "pydantic",
    "pandas",
    "polars",
    "pyarrow",
    "numpy",
    "openpyxl",
    "pyyaml",
    "matplotlib",
    "xlsxwriter",
]

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-cov",
    "ruff",
    "mypy",
    "pandas-stubs",
    "types-PyYAML",
    "types-python-dateutil",
]

[tool.setuptools.packages.find]
where = ["src"]

[tool.ruff]
line-length = 120
target-version = "py313"

[tool.ruff.lint]
select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "I", # isort
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "N", # pep8-naming
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
]
ignore = [
    "TC003", # unused TYPE_CHECKING import
    "B008", # Do not perform function calls in argument defaults
]

[tool.ruff.lint.isort]
known-first-party = ["bank_projections"]

[tool.mypy]
python_version = "3.13"
strict = true
warn_return_any = true
warn_unused_configs = true
no_implicit_reexport = true
namespace_packages = true
show_error_codes = true
show_column_numbers = true
pretty = true
explicit_package_bases = true
mypy_path = "src"

[[tool.mypy.overrides]]
module = [
    "openpyxl.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = [
    "-v",
    "--strict-markers",
    "--strict-config",
    "--cov=src/bank_projections",
]
filterwarnings = [
]

[tool.coverage.run]
branch = true
source = ["src/bank_projections"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]